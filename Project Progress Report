# Entry 1

Our team: Karolina, David, Yizhen(Eloise) and Emilio

Members: 
Karolina - (Python, Java, C++) good at debugging so can do the test cases
David - (Python, Java, C++), frontend(react) 
Eloise - (Python,Java,JS,mysql,css,html) Concentration: backend
Emilio - Backend (Java, C, Python), Frontend (ReactJS, NodeJS)


Programming language:
ReactJS (frontend)
Widely used, so lots of existing support and features
Java (backend)
Our members have experience working with Java and creating REST APIs in Java
It is a language that offers good scalability, robustness, is relatively simple, and offers higher performance over other languages such as Python

Tools and Frameworks used:
React
Java
MySQL (database)

Iteration meeting time: Thurs 5-6 pm

—------------------------------------------------------------------------------------

Project Proposal:  Website For Reviewing/Rating Music

System purpose:
Allow different people from around the world to rate and share music with one another. Ideally this site will help users and artists alike to share music with one another.

Actors involved:
Admins (the website creators)
Users (anyone who wishes to make an account)

Functionalities:
Users can create accounts and browse albums/songs to rate and/or leave reviews
Follow user feature
Feed of friend’s activity on the website
Albums/Songs/Artist pages that have aggregated ratings and reviews from all users


Goals:
Create a social-media platform where people can review, rate and share music with one another
Allow people to easily find new music


Chosen process: 
Our team intends to follow the Agile workflow
Size: Since our team is small (4 people), this favors an agile methodology.
Criticality: Our project is not critical, so we can afford to use an agile methodology.
Dynamism: We may change our goals and technology requirements as the project progresses, which favors an agile approach.
Personnel: Our personnel are relatively inexperienced, but willing to learn and adapt quickly. This factor does not heavily impact our chosen methodology.
Culture: Our team members don’t have a big preference for either change or predictability. This factor also does not have a significant impact on our chosen methodology.


Iteration Date: 8th Feb 
Last Iteration’s completed tasks: -
Leftovers from last iteration: -
Member contribution:
Karolina: Work on proposal
Yizhen (Eloise):  Work on proposal
David: Work on proposal
Emilio: Work on proposal

Priority features to be implemented: FInish proposal

Assignments: Project proposal
Next iteration date: 29th Feb



Iteration Date: 29th Feb
Last Iteration’s completed tasks: 
Proposal finished
 defined main components of the system and team’s skills. 
Use cases are finished
Leftovers from last iteration: 
Define a timeline for the semester
 Meeting minutes to write up 
Member contribution since last iteration:
Karolina: Viewer use case pov and 2/8+ 2/29 meeting minutes
Yizhen (Eloise): Viewer use case pov
David: Editor use case pov
Emilio: Editor use case pov

Priority features to be implemented: 
Revisit use cases
Class diagram
Generate user stories
Set up timeline for presentation and end product

Assignments: HW 3
Next iteration date: Thursday 12th March


Iteration Date: 12th Mar
Last Iteration’s completed tasks:
HW1-4
Timeline for project
Leftovers from last iteration:
Review class diagrams- ensure we are not missing certain implementations
Priority features to be implemented:
Draft frontend interface 
Backend draft 
Draft topic presentation
Draft design presentation
Draft technique presentation
Update use case diagrams to include all use cases 

Member contribution:
Karolina: Explanation of retweet code, meeting minutes
Yizhen (Eloise): Use case diagrams
David: Begin frontend planning
Emilio: Update class diagrams, draft backend, create controllers, services, and 

Assignments: 
Prepare presentation
Work on backend
Design frontend 
Set up TA meet


Next iteration date: 21st Mar (upcoming presentation so meeting more frequently)
Last Iteration’s completed tasks:
Backend started
Class diagrams revised

Leftovers from last iteration:
Start frontend draft (Karolina and David meeting friday for draft)
Frontend design prototype
Draft presentation
Set TA meet

Main aspects for presentation:
Intro 
System overview (tech stack) 
Security
Use case diagram (Eloise)
class diagrams (Eloise)
Example of a fully dressed use case (Eloise)
Sequence diagram (Eloise)
Overview of frontend design 
Code overview
Overview of backend design (Emilio)
Code overview (Emilio)



Member contribution:
Karolina: Minutes, Frontend draft, 
Yizhen (Eloise):    
David: frontend draft, learning react
Emilio: finish up the skeleton for the backend and begin preparing for presentation

Assignments: 
Presentation skeleton (by this weekend)
Visuals finished
Continue backend
Implement testing
Frontend design draft

Next iteration date: 22nd April
Last Iteration’s completed tasks:
Completed presentation!
Fixed backend
Started frontend implementation
Connected frontend to backend

Leftovers from last iteration:
Keep working on frontend design
Implement further testing

Member contribution:
Karolina frontend side of presentation,: Fixed retweet homework, meeting minutes, working on frontend (created home page)
Yizhen (Eloise):   fix the github problem to commit directly; meeting minutes; Working on unfinished frontend“artist page””song page”
David: 
Emilio: continued to work on the backend; added “follow user” and “create review” functionality, as well as the ability to create album, song and artist objects. Also added the ability to get reviews, songs and artists (both single instance and multiple instances)


Assignments: 
Homework 6 to complete
Frontend visuals to implement
Brainstorm final presentation skeleton
Redo homework 5



Next iteration date: 25th April (meeting more frequently due to presentation)
Last Iteration’s completed tasks:
Implemented frontend
Have a homepage
Backend implementations added such as SpecifiedUser or finding FollowedUsers
Designed a logo

Leftovers from last iteration:
Set individual pages in frontend
Set up a header with a search bar
Unfinished front end: Album song and so on
Implement uiux

Member contribution:
Karolina:Frontend:
Homepage
Header with search bar
Set up ‘new’ page with upcoming info
Working on connecting frontend to backend to get database info
Next step is profile and sign in page
Yizhen (Eloise): 
 -working on other unfinished frontend: “profile page” and so on and components part; 
meeting minutes;
creating a rough structure  slides of overall final presentation；
work on hw
David:
Created a script that populated our database with Album, Song, and Artist objects
Emilio: Worked on the backend:
- Added the ability to get followed users
- Added the ability to get a user’s feed
- Added the “calculateScore” function in our Album and Song classes
- Added the ability to unfollow users
- Added the ability to edit reviews
- Added the ability to delete reviews
- Added all things Image related on the backend, including uploading images for Users, Albums, Songs, and Artists, as well as adding default images which are stored in our newly created AWS S3 bucket.
- Added the ability to get albums randomly
- Added the ability to get albums that were most recently released
- Began work on implementing Playlists on the backend
- Began working on documentation for our API endpoints


Assignments: 
Homework 6 (completed)
- Finish header
- Set up search bar
- Set up frontend sign in authentication
- Add the ability to get User feeds (completed)
- Populate database (completed)
- Add the ability to get new releases (completed)
- Add the ability to unfollow a user (completed)
- Fix image error in backend (completed)
- Create ppt for final presentation
